function plot_abundancesDendriticVsSomatic(data, lengthToShow)

% set panel labels
panelLabel = {'C', ''};
% load colors
load('3Reds4Blues4Greens3Greys3Violets.mat');
% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_abundancesDendriticVsSomatic'], ...
       'Name'    , 'abundancesDendriticVsSomatic', ...
       'Units'   , 'centimeter', ...
       'Position', [2, 2, 6, 10]);

%% get mRNA and protein abundances

% get data with dendrite length "lenToShow"
data          = data(data.('length') == lengthToShow, :);
% store the cheapest strategy per parameter combination 
% (0 = somatic mRNA, 1 = dendritic mRNA with mRNA transport)
denIsCheapest = data.('totalCost - den') < data.('totalCost - som');
% abundance of mRNA and protein sorted for artificial protein species
% preferring either dendritic or somatic mRNA
nMRNA         = [];
nMRNA.den     = data.('mRNADendrTotal - den')( denIsCheapest) + data.('mRNASomaTotal - den')( denIsCheapest);
nMRNA.som     = data.('mRNADendrTotal - som')(~denIsCheapest) + data.('mRNASomaTotal - som')(~denIsCheapest);
nProtein      = [];
nProtein.den  = data.('proteinDendrTotal - den')( denIsCheapest) + data.('proteinSpineTotal - den')( denIsCheapest);
nProtein.som  = data.('proteinDendrTotal - som')(~denIsCheapest) + data.('proteinSpineTotal - som')(~denIsCheapest);

%% plot mRNA abundance per cheapest strategy

% create axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [1.25, 5.25, 1.5, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.4, 2.6], ...
          'YLim'                , [-1, 5], ...
          'YTick'               , 0:2:12); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} mRNA count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% panel label
text('String'             , panelLabel{1}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1, ax.Position(4) + 1.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% boxplot with mRNA abundance for parameter combinations preferring
% somatic mRNA
yDat = log10(nMRNA.som);
xDat = ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.7, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot with mRNA abundance for parameter combinations preferring
% dendritic mRNA. Plot median in white on top.
yDat = log10(nMRNA.den);
xDat = 2.*ones(size(yDat));
b    = boxchart(xDat, yDat, ...
               'BoxWidth'        , 0.7, ...
               'MarkerStyle'     , 'none', ...
               'WhiskerLineColor', colors.Red, ...
               'BoxFaceColor'    , colors.Red, ...
               'BoxFaceAlpha'    , 1, ...
               'LineWidth'       , 1); hold on;
yDat = median(log10(nMRNA.den)).*[ 1, 1];
xDat = 2 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;

%% plot protein abundance per cheapest strategy

% create axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [4.25, 5.25, 1.5, 3], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.02, 0.02], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0.4, 2.6], ...
          'YLim'                , [3, 8], ...
          'YTick'               , 0:2:12); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} protein count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% plot panel label
text('String'             , panelLabel{2}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-0.25, ax.Position(4) + 0.7], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% boxplot with protein abundance for parameter combinations preferring
% somatic mRNA
yDat = log10(nProtein.som);
xDat = ones(size(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.7, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% boxplot with protein abundance for parameter combinations preferring
% dendritic mRNA. Plot median in white on top.
yDat = log10(nProtein.den);
xDat = 2.*ones(size(yDat));
b    = boxchart(xDat, yDat, ...
               'BoxWidth'        , 0.7, ...
               'MarkerStyle'     , 'none', ...
               'WhiskerLineColor', colors.Blue, ...
               'BoxFaceColor'    , colors.Blue, ...
               'BoxFaceAlpha'    , 1, ...
               'LineWidth'       , 1); hold on;
yDat = median(log10(nProtein.den)).*[ 1, 1];
xDat = 2 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, yDat, ...
     'Color'    , 'white', ...
     'LineWidth', 0.75); hold on;

%% legend

% axis
axes('Units'               , 'centimeter', ...
     'Position'            , [0.5, 8.5, 5.5, 0.75], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'XLim'                , [0, 1], ...
     'YLim'                , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% legend title
text('String'             , {'Cheapest ', 'strategy:'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 7, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.27, 0.5], ...
     'HorizontalAlignment', 'right', ...
     'VerticalAlignment'  , 'middle'); hold on;
% data for legend markers
yDat = 0.7.*rand(1, 500) + 0.1;
% colors.Red marker for "somatic mRNA"
xDat = 0.33.*ones(1, numel(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.03, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Red, ...
         'BoxFaceColor'    , colors.Red, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% colors.Blue marker for "somatic mRNA"
xDat = 0.37.*ones(1, numel(yDat));
boxchart(xDat, yDat, ...
         'BoxWidth'        , 0.03, ...
         'MarkerStyle'     , 'none', ...
         'WhiskerLineColor', colors.Blue, ...
         'BoxFaceColor'    , colors.Blue, ...
         'BoxFaceAlpha'    , 0, ...
         'LineWidth'       , 1); hold on;
% Label for "somatic mRNA"
text('String'             , {'Somatic ', 'mRNA'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 7, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.4, 0.5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
% colors.Red marker for "dendritic mRNA + mRNA transport". Median in white on top
xDat = 0.63.*ones(1, numel(yDat));
b    = boxchart(xDat, yDat, ...
               'BoxWidth'        , 0.03, ...
               'MarkerStyle'     , 'none', ...
               'WhiskerLineColor', colors.Red, ...
               'BoxFaceColor'    , colors.Red, ...
               'BoxFaceAlpha'    , 1, ...
               'LineWidth'       , 1); hold on;
xDat = 0.63 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, median(yDat).*[1, 1], ...
     'Color', 'white', ...
     'LineWidth', 0.75); hold on;
% colors.Blue marker for "dendritic mRNA + mRNA transport". Median in white on top
xDat = 0.67.*ones(1, numel(yDat));
b    = boxchart(xDat, yDat, ...
               'BoxWidth'        , 0.03, ...
               'MarkerStyle'     , 'none', ...
               'WhiskerLineColor', colors.Blue, ...
               'BoxFaceColor'    , colors.Blue, ...
               'BoxFaceAlpha'    , 1, ...
               'LineWidth'       , 1); hold on;
xDat = 0.67 + (b.BoxWidth/2).*[-1, 1];
plot(xDat, median(yDat).*[1, 1], ...
     'Color', 'white', ...
     'LineWidth', 0.75); hold on;
% Label for "dendritic mRNA + mRNA transport"
text('String'             , {'Dendritic', 'mRNA'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 7, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.7, 0.5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;

%% panel label "Model predictions"

% axis
axes('Units'               , 'centimeter', ...
     'Position'            , [0.5, 9.4, 5.25, 0.5], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'XLim'                , [0, 1], ...
     'YLim'                , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% create label 
text('String'             , {'Model predictions'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.5, 0.3], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;
