function plot_abundancesCheapestStrategy_withExpData(data, yLim, boxLim, sources_m, sourceDat_m, sources_p, sourceDat_p)

% set panel labels
panelLabel = {'A', '', 'B', ''};
% style and width of experimental data (if there are more than one per
% panel)
lineStyles = {'--', '-'};
lineWidths = [1, 0.5];
% load colormaps
load('256Reds256Blues256BluesReds.mat');
% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_abundancesCheapestStrategy_withExpData'], ...
       'Name'    , 'abundancesCheapestStrategy_withExpData', ...
       'Units'   , 'centimeter', ...
       'Position', [2, 2, 10, 10]);

%% get mRNA and protein abundances

% sort along dendrite length
data             = sortrows(data, 'length', 'ascend');
% find length values in the data table    
varVals          = categories(categorical(data.('length')));    
% number of length values
nVals            = numel(varVals);
% number of entries
nRows            = size(data, 1);
% store the cheapest strategy per parameter combination
% (0 = somatic mRNA, 1 = dendritic mRNA with mRNA transport)
denIsCheapest = data.('totalCost - den') < data.('totalCost - som');
% abundance of mRNA and protein when using the cheapest strategy
nMRNA            = (data.('mRNADendrTotal - som')    + data.('mRNASomaTotal - som')   ).*(1 - denIsCheapest) ...
                 + (data.('mRNADendrTotal - den') + data.('mRNASomaTotal - den')).*denIsCheapest;
nProtein         = (data.('proteinDendrTotal - som')    + data.('proteinSpineTotal - som')   ).*(1 - denIsCheapest) ...
                 + (data.('proteinDendrTotal - den') + data.('proteinSpineTotal - den')).*denIsCheapest;
% reshape into matrices with entries for each length value in a single
% column (works because table was sorted)
nMRNA            = reshape(nMRNA   , nRows/nVals, nVals);
nProtein         = reshape(nProtein, nRows/nVals, nVals);
% number of entries per length
nRows            = nRows/nVals;

%% plot mRNA abundance using the cheapest strategy

% major axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [1.25, 5.5, 3.5, 3.5], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, 1], ...
          'XTick'   , [0, 1], ...
          'YLim'    , yLim.A, ...
          'YTick'   , 0:5:30); hold on;
set(get(ax, 'XAxis'), 'Color', 'none')
set(get(ax, 'YAxis'), 'Color', 'none')
% plot panel label
text('String'             , panelLabel{1}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1, ax.Position(4) + 0.45], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% for each dendrite length, plot mRNA abundance for each parameter 
% combination using the cheapest strategy
for i = 1:nVals
    yDat = sort(log10(nMRNA(:, i)), 'descend');
    xDat = (1:numel(yDat))./numel(yDat);
    plot(xDat, yDat, ...
         'Color'    , Reds(round(256*i/nVals), :), ...
         'LineWidth', 1.5); hold on;
end
% create x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , {}, ...
     'YLim'                , ax.YLim); hold on;
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'mRNAs', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% create y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick, ...
     'YTickLabel'          , ax.YTickLabel, ...
     'XLim'                , ax.XLim); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} mRNA count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% plot inset with mRNA abundance boxplots  

% create axis for inset
mat = [20,  0,  0,  0;
        0, 20,  0,  0;
        8,  0,  7,  0;
        0,  8,  0, 10]./20;
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position*mat, ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 7, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.03, 0.03], ...
     'TickLabelInterpreter', 'tex', ...
     'XLim'                , [0.5, 4.7], ...
     'YAxisLocation'       , 'right', ...
     'YLim'                , boxLim, ...
     'YTick'               , 0:5:30); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} # mRNAs', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 7, ...
                        'FontName'   , 'Arial')
% for each dendrite length, plot mRNA abundance for each parameter 
% combination using the cheapest strategy
for i = 1:nVals
    yDat = log10(nMRNA(:, i));
    xDat = i.*ones(nRows, 1);
    boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.75, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', Reds(round(256*i/nVals), :), ...
             'BoxFaceColor'    , Reds(round(256*i/nVals), :), ...
             'BoxFaceAlpha'    , 0.15, ...
             'LineWidth'       , 1); hold on;
end
% label x-axis at 250 microns
text('String'             , '250', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 7, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [1/8, -0.1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;
% label x-axis at 1000 microns
text('String'             , '1000', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 7, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [7/8, -0.1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;
 
%% plot inset with dendrite length legend  

% create axis for legend
mat = [20,  0,  0,  0;
        0, 20,  0,  0;
        1,  0,  8,  0;
        0, 12,  0, 10]./20;
axes('Units'   , 'centimeter', ...
     'Position', ax.Position*mat, ...
     'Color'   , 'none', ...
     'Box'     , 'off', ...
     'XLim'    , [0, 1], ...
     'YLim'    , [0, nVals + 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% colored legend label
for i = 1:nVals
    text('String'             , [num2str(varVals{i}), '\mum'], ...
         'Color'              , Reds(round(256*i/nVals), :), ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [1, i], ...
         'HorizontalAlignment', 'right', ...
         'VerticalAlignment'  , 'middle'); hold on;
end
% label legend with title "Dendrite length"
text('String'             , 'Dendr. length', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.6, nVals + 1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;

%% plot protein abundance per cheapest strategy

% major axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [6, 5.5, 3.5, 3.5], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, 1], ...
          'XTick'   , [0, 1], ...
          'YLim'    , yLim.A); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% plot panel label
text('String'             , panelLabel{2}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% for each dendrite length, plot protein abundance for each parameter 
% combination using the cheapest strategy
for i = 1:nVals
    yDat = sort(log10(nProtein(:, i)), 'descend');
    xDat = (1:numel(yDat))./numel(yDat);
    plot(xDat, yDat, ...
         'Color'    , Blues(round(256*i/nVals), :), ...
         'LineWidth', 1.5); hold on;
end
% create x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , {}, ...
     'YLim'                , ax.YLim); hold on;
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Proteins', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% create y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick, ...
     'YTickLabel'          , ax.YTickLabel, ...
     'XLim'                , ax.XLim); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} protein count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
                    
%% plot inset with protein abundance boxplots  

% create axis for inset
mat = [20,  0,  0,  0;
        0, 20,  0,  0;
       11,  0,  7,  0;
        0, 10,  0, 10]./20;
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position*mat, ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 7, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.03, 0.03], ...
     'TickLabelInterpreter', 'tex', ...
     'XLim'                , [0.5, 4.7], ...
     'YAxisLocation'       , 'right', ...
     'YLim'                , boxLim, ...
     'YTick'               , 0:5:30); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} # proteins', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 7, ...
                        'FontName'   , 'Arial')
% for each dendrite length, plot protein abundance for each parameter 
% combination using the cheapest strategy
for i = 1:nVals
    yDat = log10(nProtein(:, i));
    xDat = i.*ones(nRows, 1);
    boxchart(xDat, yDat, ...
             'BoxWidth'        , 0.75, ...
             'MarkerStyle'     , 'none', ...
             'WhiskerLineColor', Blues(round(256*i/nVals), :), ...
             'BoxFaceColor'    , Blues(round(256*i/nVals), :), ...
             'BoxFaceAlpha'    , 0.15, ...
             'LineWidth'       , 1); hold on;
end
% label x-axis at 250 microns
text('String'             , '250', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 7, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [1/8, -0.1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;
% label x-axis at 1000 microns
text('String'             , '1000', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 7, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [7/8, -0.1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;

%% plot inset with dendrite length legend  

% create axis for legend
mat = [20,  0,  0,  0;
        0, 20,  0,  0;
        1,  0,  8,  0;
        0, 12,  0, 10]./20;
axes('Units'   , 'centimeter', ...
     'Position', ax.Position*mat, ...
     'Color'   , 'none', ...
     'Box'     , 'off', ...
     'XLim'    , [0, 1], ...
     'YLim'    , [0, nVals + 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% colored legend label
for i = 1:nVals
    text('String'             , [num2str(varVals{i}), '\mum'], ...
         'Color'              , Blues(round(256*i/nVals), :), ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [1, i], ...
         'HorizontalAlignment', 'right', ...
         'VerticalAlignment'  , 'middle'); hold on;
end
% label legend with title "Dendrite length"
text('String'             , 'Dendr. length', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.6, nVals + 1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'middle'); hold on;

%% plot simulated vs. experimental mRNA abundance using the cheapest strategy

% major axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [1.25, 0.85, 3.5, 3.5], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, 1], ...
          'XTick'   , [0, 1], ...
          'YLim'    , yLim.B); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% plot panel label
text('String'             , panelLabel{3}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1, ax.Position(4) + 0.35], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% for dendrite length 250, plot mRNA abundance for each parameter 
% combination using the cheapest strategy
yDat = sort(log10(nMRNA(:, strcmp(varVals, '250'))), 'descend');
xDat = (1:numel(yDat))./numel(yDat);
plot(xDat, yDat, ...
     'Color'    , Reds(round(256*find(strcmp(varVals, '250'))/nVals), :), ...
     'LineWidth', 2); hold on;
% plot mean mRNA abundances from experimental data
for i = 1:numel(sourceDat_m)
    yDat = sourceDat_m{i};
    % sort species by abundance
    yDat = sort(yDat, 'descend');
    % transform to log-scale
    yDat = log10(yDat);
    xDat = (1:numel(yDat))./numel(yDat);
    plot(xDat, yDat, ...
         'Color'    , 'black', ...
         'LineStyle', lineStyles{i}, ...
         'LineWidth', lineWidths(i)); hold on;
end
% create x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , {}, ...
     'YLim'                , ax.YLim); hold on;
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'mRNAs', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% create y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick, ...
     'YTickLabel'          , ax.YTickLabel, ...
     'XLim'                , ax.XLim); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} mRNA count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% plot inset with mRNA abundance source legend  

axes('Units'   , 'centimeter', ...
     'Position', ax.Position, ...
     'Color'   , 'none', ...
     'Box'     , 'off', ...
     'XLim'    , [0, 1], ...
     'YLim'    , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% plot legend markers with labels for experimental mRNA abundance data and
% a header "Data reported in"
text('String'             , 'Data reported in', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.22, 0.95], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
for sInd = 1:numel(sources_m)
    plot([0.05, 0.15], [0.95, 0.95] - sInd.*0.15, ...
         'Color'    , 'black', ...
         'LineStyle', lineStyles{sInd}, ...
         'LineWidth', lineWidths(sInd)); hold on;
    text('String'             , sources_m{sInd}, ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [0.17, 0.95 - sInd.*0.15], ...
         'HorizontalAlignment', 'left', ...
         'VerticalAlignment'  , 'middle'); hold on;
end
% plot legend marker with label for simulated mRNA abundance data
plot([0.05, 0.15], [0.4, 0.4], ...
     'Color'    , Reds(round(256*find(strcmp(varVals, '250'))/nVals), :), ...
     'LineWidth', 2); hold on;
text('String'             , {'Prediction for', '250\mum dendrite'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.17, 0.4], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;

%% plot simulated vs. experimental protein abundance using the cheapest strategy

% major axis
ax = axes('Units'               , 'centimeter', ...
          'Position'            , [6, 0.85, 3.5, 3.5], ...
          'Color'               , 'none', ...
          'Box'                 , 'off', ...
          'FontSize'            , 10, ...
          'FontName'            , 'Arial', ...
          'LineWidth'           , 0.5, ...
          'TickDir'             , 'out', ...
          'TickLength'          , [0.03, 0.03], ...
          'TickLabelInterpreter', 'tex', ...
          'XLim'                , [0, 1], ...
          'XTick'               , [0, 1], ...
          'XTickLabel'          , ax.XTickLabel, ...
          'YLim'                , yLim.B); hold on;
set(get(gca, 'YAxis'), 'Color', 'none')
% plot panel label
text('String'             , panelLabel{4}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1, ax.Position(4) + 0.1], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% for dendrite length 250, plot protein abundance for each parameter 
% combination using the cheapest strategy
yDat = sort(log10(nProtein(:, strcmp(varVals, '250'))), 'descend');
xDat = (1:numel(yDat))./numel(yDat);
plot(xDat, yDat, ...
     'Color'    , Blues(round(256*find(strcmp(varVals, '250'))/nVals), :), ...
     'LineWidth', 2); hold on;
% plot mean protein abundance 
for i = 1:numel(sourceDat_p)
    yDat = sourceDat_p{i};
    % sort species by abundance
    yDat = sort(yDat, 'descend');
    % transform to log-scale
    yDat = log10(yDat);
    xDat = (1:numel(yDat))./numel(yDat);
    plot(xDat, yDat, ...
         'Color'    , 'black', ...
         'LineStyle', lineStyles{i}, ...
         'LineWidth', lineWidths(i)); hold on;
end
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% create x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , {}, ...
     'YLim'                , ax.YLim); hold on;
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Proteins', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% create y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Color'               , 'none', ...
     'Box'                 , 'off', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick, ...
     'YTickLabel'          , ax.YTickLabel, ...
     'XLim'                , ax.XLim); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'log_{10} protein count', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% plot inset with protein abundance source legend  

% axis for legend
axes('Units'   , 'centimeter', ...
     'Position', ax.Position, ...
     'Color'   , 'none', ...
     'Box'     , 'off', ...
     'XLim'    , [0, 1], ...
     'YLim'    , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% plot legend markers with labels for experimental mRNA abundance data and
% a header "Data reported in"
text('String'             , 'Data reported in', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.22, 0.95], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
for sInd = 1:numel(sources_p)
    plot([0.05, 0.15], [0.95, 0.95] - sInd.*0.15, ...
         'Color'    , 'black', ...
         'LineStyle', lineStyles{sInd}, ...
         'LineWidth', lineWidths(sInd)); hold on;
    text('String'             , sources_p{sInd}, ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 10, ...
         'FontName'           , 'Arial', ...
         'Units'              , 'data', ...
         'Position'           , [0.17, 0.95 - sInd.*0.15], ...
         'HorizontalAlignment', 'left', ...
         'VerticalAlignment'  , 'middle'); hold on;
end
% plot legend marker with label for simulated protein abundance data
plot([0.05, 0.15], [0.15, 0.15], ...
     'Color'    , Blues(round(256*find(strcmp(varVals, '250'))/nVals), :), ...
     'LineWidth', 2); hold on;
text('String'             , {'Prediction for', '250\mum dendrite'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.17, 0.15], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
