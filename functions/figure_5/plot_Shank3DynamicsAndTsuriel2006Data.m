function plot_Shank3DynamicsAndTsuriel2006Data(params, x, pSom, pInit, pInitSpine, pTag, pTagSpine, t, timeIndsToPlot, saveTimes, spineLocs, spineMarker, measuredTimes, datTsuriel)

% define panel labels
panelLabel  = {'A', 'B', 'C', 'D', 'E'};
% initialise figure
figure('FileName', [char(datetime('today', 'Format', 'yyyy_MM_dd')), '_Prosap2DynamicsFromTsuriel2006_linDendr'], ...
       'Name'    , 'Prosap2DynamicsFromTsuriel2006_linDendr', ...
       'Units'   , 'centimeter', ...
       'Position', [2, 2, 15, 13]);
% load colors
load('3Reds4Blues4Greens3Greys3Violets.mat');
greenColors = {colors.DarkGreen, colors.Green, colors.LightGreen, colors.VeryLightGreen};
blueColors  = {colors.LightBlue, colors.Blue, colors.DarkBlue};

%% - plot distribution of tagged cytosolic proteins -

% axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [1.75, 7, 5, 5], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, 300], ...
          'XTick'   , 0:50:500, ...
          'YLim'    , [0, ceil(pSom)], ...
          'YTick'   , [0, ceil(pSom)]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% panel label
text('String'             , panelLabel{1}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.4, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% plot protein distribution
for i = 1:numel(timeIndsToPlot)
    % x-coordinates
    xDat = x;
    % photoactivated proteins
    yDat = pTag(timeIndsToPlot(i), :);
    % plot data
    plot(xDat, yDat, ...
         'Color'    , blueColors{i}, ...
         'LineStyle', '-', ...
         'LineWidth', 1.5); hold on;
    % find intersection of curve with diagonal to define text position
    [~, diagInd] = min(abs((ceil(pSom)/params.length).*x - pTag(timeIndsToPlot(i), :)));
    % show time after experiment onset
    text('String'             , [num2str(t(saveTimes(timeIndsToPlot(i)))/3600), 'h'], ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 9, ...
         'FontName'           , 'Arial', ...
         'BackgroundColor'    , 'white', ...
         'Margin'             , 0.001, ...
         'Units'              , 'data', ...
         'Position'           , [x(diagInd), pTag(timeIndsToPlot(i), diagInd)], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'middle'); hold on;
end
% plot label "Photoactivated"
text('String'             , 'Photoactivated', ...
     'Color'              , colors.DarkBlue, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [1.1, 0.1], ...
     'HorizontalAlignment', 'right', ...
     'VerticalAlignment'  , 'middle'); hold on;
% x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XTickLabelRotation'  , 0, ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , ax.XTickLabel, ...
     'YLim'                , [0, 1]);
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Distance [\mum]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick);
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Shank3 /\mum, dendritc shaft', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% - plot distribution of non-tagged cytosolic proteins -

% create axis
mat = [20,  0,  0,  0;
        0, 20,  0,  0;
       10,  0, 10,  0;
        0, 10,  0, 10]./20;
% axis
ax = axes('Units'     , 'centimeter', ...
          'Position'  , ax.Position*mat, ...
          'Box'       , 'off', ...
          'Color'     , 'none', ...
          'XLim'      , [0, 300], ...
          'XTick'     , 0:50:300, ...
          'XTickLabel', {'0', '', '', '150', '', '', '300'}, ...
          'YLim'      , [0, ceil(pSom)], ...
          'YTick'     , [0, ceil(pSom)]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% x-coordinates
xDat = x;
% non-photoactivated proteins at t=0 equal the total protein 
yDat = pInit;
% plot non-photoactivated proteins at t=0 ...
plot(xDat, yDat, ...
     'Color'    , 'black', ...
     'LineStyle', '-', ...
     'LineWidth', 1.5); hold on;
% and the chosen time indices
for i = 1:numel(timeIndsToPlot)
    % x-coordinates
    xDat = x;
    % non-photoactivated proteins are given by the difference of total
    % protein and photoactivated protein
    yDat = pInit - pTag(timeIndsToPlot(i), :);
    % plot data
    plot(xDat, yDat, ...
         'Color'    , (1 - i*0.2).*[1, 1, 1], ...
         'LineStyle', '-', ...
         'LineWidth', 1.5); hold on;
end
% plot label "Not photoactivated"
text('String'             , {'Not', 'photoactivated'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.6, 0], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XTickLabelRotation'  , 0, ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , ax.XTickLabel, ...
     'YLim'                , [0, 1]);
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Distance [\mum]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick);
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Shank3 /\mum', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% - plot distribution of tagged proteins in spines -

% axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [8.75, 7, 5, 5], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, 300], ...
          'XTick'   , 0:50:500, ...
          'YLim'    , [0, params.eta_p], ...
          'YTick'   , [0, params.eta_p]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% panel label
text('String'             , panelLabel{2}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.4, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% plot protein distribution
for i = 1:numel(timeIndsToPlot)
    % x-coordinates
    xDat = x;
    % photoactivated spine protein
    yDat = pTagSpine(timeIndsToPlot(i), :);
    % plot data
    plot(xDat, yDat, ...
         'Color'    , blueColors{i}, ...
         'LineStyle', '-', ...
         'LineWidth', 1.5); hold on;
    % find intersection of curve with diagonal
    [~, diagInd]               = min(abs((params.eta_p/params.length).*x - pTagSpine(timeIndsToPlot(i), :)));
    % show time after experiment onset
    text('String'             , [num2str(t(saveTimes(timeIndsToPlot(i)))/3600), 'h'], ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 9, ...
         'FontName'           , 'Arial', ...
         'BackgroundColor'    , 'white', ...
         'Margin'             , 0.001, ...
         'Units'              , 'data', ...
         'Position'           , [x(diagInd), pTagSpine(timeIndsToPlot(i), diagInd)], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'middle'); hold on;
end

% plot label "Photoactivated"
text('String'             , 'Photoactivated', ...
     'Color'              , colors.DarkBlue, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [1.1, 0.1], ...
     'HorizontalAlignment', 'right', ...
     'VerticalAlignment'  , 'middle'); hold on;
% x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XTickLabelRotation'  , 0, ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , ax.XTickLabel, ...
     'YLim'                , [0, 1]); hold on;
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Distance [\mum]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% plot spine marker
for i = 1:numel(spineLocs)
    % place spine markers
    xDat = spineLocs(i);
    yDat = 0.01;
    % marker size
    if strcmp(spineMarker{i}, 's')
        markerSize = 8;
    else
        markerSize = 7;
    end
    % plot data
    plot(xDat, yDat, ...
         'LineStyle'      , 'none', ...
         'Marker'         , spineMarker{i}, ...
         'MarkerSize'     , markerSize, ...
         'MarkerFaceColor', greenColors{i}, ...
         'MarkerEdgeColor', 'black'); hold on;
end
% y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick);
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Shank3 / spine', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% - plot distribution of non-tagged proteins in spines -

% create axis
mat = [20,  0,  0,  0;
        0, 20,  0,  0;
       10,  0, 10,  0;
        0, 10,  0, 10]./20;
ax = axes('Units'     , 'centimeter', ...
          'Position'  , ax.Position*mat, ...
          'Box'       , 'off', ...
          'Color'     , 'none', ...
          'XLim'      , [0, 300], ...
          'XTick'     , 0:50:300, ...
          'XTickLabel', {'0', '', '', '150', '', '', '300'}, ...
          'YLim'      , [0, params.eta_p], ...
          'YTick'     , [0, params.eta_p]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% x-coordinates
xDat = x;
% non-photoactivated proteins at t=0 equal the total protein 
yDat = pInitSpine;
% plot non-photoactivated proteins in spines at t=0 ...
plot(xDat, yDat, ...
     'Color'    , 'black', ...
     'LineStyle', '-', ...
     'LineWidth', 1.5); hold on;
% and the chosen time indices
for i = 1:numel(timeIndsToPlot)
    % x-coordinates
    xDat = x;
    % non-photoactivated proteins are given by the difference of total
    % protein and photoactivated protein
    yDat = pInitSpine - pTagSpine(timeIndsToPlot(i), :);
    % plot data
    plot(xDat, yDat, ...
         'Color'    , (1 - i*0.2).*[1, 1, 1], ...
         'LineStyle', '-', ...
         'LineWidth', 1.5); hold on;
end
% plot label "Not photoactivated"
text('String'             , {'Not', 'photoactivated'}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'normalized', ...
     'Position'           , [0.6, 0], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XTickLabelRotation'  , 0, ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , ax.XTickLabel, ...
     'YLim'                , [0, 1]);
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Distance [\mum]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick);
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , 'Shank3 / spine', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% --------- plot single spine content ------------

% axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [1.75, 2, 3, 3], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, t(end)/3600], ...
          'XTick'   , 0:2:(t(end)/3600), ...
          'YLim'    , [0, params.eta_p], ...
          'YTick'   , [0, params.eta_p]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% panel label
text('String'             , panelLabel{3}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.4, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% plot data
for i = 1:numel(spineLocs)
    % Saved time points in hours:
    xDat = t(saveTimes)/3600;
    % Simulated fluorescent protein at the location of spines of interest:
    yDat = pTagSpine(:, x == spineLocs(i));
    % plot data
    plot(xDat, yDat, ...
         'Color'    , greenColors{i}, ...
         'LineWidth', 1.5); hold on;
    % label current curve. For rotation angle get slope between 6h and 8h,
    % then mutliply with panel limits (which is 45 degree slope in the panel)
    text('String'             , [num2str(spineLocs(i)), '\mum'], ...
         'Interpreter'        , 'tex', ...
         'FontSize'           , 7, ...
         'FontName'           , 'Arial', ...
         'Rotation'           , 50/8*(pTagSpine(17, x == spineLocs(i)) - pTagSpine(13, x == spineLocs(i)))/2, ...
         'Units'              , 'data', ...
         'Position'           , [7, pTagSpine(16, x == spineLocs(i))], ...
         'HorizontalAlignment', 'center', ...
         'VerticalAlignment'  , 'bottom'); hold on;
end
% x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XTickLabelRotation'  , 0, ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , ax.XTickLabel, ...
     'YLim'                , [0, 1]);
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Time [h]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick);
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , {'Photoactivated', 'Shank3 per spine'}, ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% - plot single spine content - experimental data -

% major axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [6.5, 2, 3, 3], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, t(end)/3600], ...
          'XTick'   , 0:2:(t(end)/3600), ...
          'YLim'    , [1, 6], ...
          'YTick'   , [1, 6]); hold on;
set(get(ax, 'XAxis'), 'Color', 'none')
set(get(ax, 'YAxis'), 'Color', 'none')
% plot data
for i = 1:numel(spineLocs)
    % Plot observed fluorescence of spines of interest. 
    % Reported time points of measurements:
    xDat = measuredTimes;
    % Reported fluorescence relative baseline of the spines of interest:
    yDat = datTsuriel(i, :);
    % plot data
    plot(xDat, yDat, ...
         'LineStyle'      , 'none', ...
         'LineWidth'      , 0.75, ...
         'Marker'         , spineMarker{i}, ...
         'MarkerSize'     , 5, ...
         'MarkerFaceColor', 'none', ...
         'MarkerEdgeColor', greenColors{i}); hold on;
end
% panel label
text('String'             , panelLabel{4}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.4, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XTickLabelRotation'  , 0, ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , ax.XTickLabel, ...
     'YLim'                , [0, 1]);
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Time [h]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick);
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , {'Fluorescence per', 'spine rel. baseline'}, ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% ----- plot normalized single spine content -----

% major axis
ax = axes('Units'   , 'centimeter', ...
          'Position', [11.25, 2, 3, 3], ...
          'Color'   , 'none', ...
          'Box'     , 'off', ...
          'XLim'    , [0, t(end)/3600], ...
          'XTick'   , 0:2:(t(end)/3600), ...
          'YLim'    , [0, 1], ...
          'YTick'   , [0, 1]); hold on;
set(get(ax, 'XAxis'), 'Color', 'none')
set(get(ax, 'YAxis'), 'Color', 'none')
% plot data
for i = 2:numel(spineLocs)
    % plot simulated fluorescent proteins in spines of interest. 
    % Saved time points in hours:
    xDat = t(saveTimes)/3600;
    % simulated fluorescent protein at the location of spines of interest 
    % normalised with the first spine's content:
    yDat = pTagSpine(:, x == spineLocs(i))./pTagSpine(:, x == spineLocs(1));
    % plot data
    plot(xDat, yDat, ...
         'Color'    , greenColors{i}, ...
         'LineWidth', 1.5); hold on;
    % Plot observed fluorescence in spines of interest. 
    % Reported time points of measurements:
    xDat = measuredTimes;    
    % Fluorescence is reported relative baseline. Baseline is removed 
    % (i.e., 1 is subtracted) and the result is normalized with the first 
    % spine's fluorescence:
    yDat = (datTsuriel(i, :) - 1)./(datTsuriel(1, :) - 1);
    % plot data
    plot(xDat, yDat, ...
         'LineStyle'      , 'none', ...
         'LineWidth'      , 0.75, ...
         'Marker'         , spineMarker{i}, ...
         'MarkerSize'     , 5, ...
         'MarkerFaceColor', 'none', ...
         'MarkerEdgeColor', greenColors{i}); hold on;
end
% panel label
text('String'             , panelLabel{5}, ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 12, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'centimeter', ...
     'Position'           , [-1.4, ax.Position(4) + 0.2], ...
     'HorizontalAlignment', 'center', ...
     'VerticalAlignment'  , 'bottom'); hold on;
% x-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [0, -0.1, 0, 0.1], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'XTickLabelRotation'  , 0, ...
     'XLim'                , ax.XLim, ...
     'XTick'               , ax.XTick, ...
     'XTickLabel'          , ax.XTickLabel, ...
     'YLim'                , [0, 1]);
set(get(gca, 'YAxis'), 'Color', 'none')
set(get(gca, 'XLabel'), 'String'     , 'Time [h]', ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')
% y-axis
axes('Units'               , 'centimeter', ...
     'Position'            , ax.Position + [-0.1, 0, 0.1, 0], ...
     'Box'                 , 'off', ...
     'Color'               , 'none', ...
     'FontSize'            , 10, ...
     'FontName'            , 'Arial', ...
     'LineWidth'           , 0.5, ...
     'TickDir'             , 'out', ...
     'TickLength'          , [0.02, 0.02], ...
     'TickLabelInterpreter', 'tex', ...
     'YLim'                , ax.YLim, ...
     'YTick'               , ax.YTick);
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YLabel'), 'String'     , {'Fluorescence', 'rel. to first spine'}, ...
                        'Interpreter', 'tex', ...
                        'FontSize'   , 10, ...
                        'FontName'   , 'Arial')

%% plot legend 

% axis
axes('Units'   , 'centimeter', ...
     'Position', [2, 0.25, 8, 0.5], ...
     'Color'   , 'none', ...
     'Box'     , 'off', ...
     'XLim'    , [0, 1], ...
     'YLim'    , [0, 1]); hold on;
set(get(gca, 'XAxis'), 'Color', 'none')
set(get(gca, 'YAxis'), 'Color', 'none')
% plot legend markers for experimentally observed spine fluorescence
for i = 1:numel(spineLocs)
    % place spine markers
    xDat = 0.6 + (i - 1)*0.02;
    yDat = 0.5;
    % marker size
    if strcmp(spineMarker{i}, 's')
        markerSize = 7;
    else
        markerSize = 5;
    end
    % plot data
    plot(xDat, yDat, ...
         'LineWidth'      , 1.5, ...
         'Marker'         , spineMarker{i}, ...
         'MarkerSize'     , markerSize, ...
         'MarkerFaceColor', 'white', ...
         'MarkerEdgeColor', greenColors{i}); hold on;
end
% plot legend label for experimental spine fluorescence
text('String'             , 'Reproduced from Tsuriel et al., 2006', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.69, 0.5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
% plot legend markers for simulation results
for i = 1:4
    xDat = [0, 0.04];
    yDat = [1, 1].*(i + 1)./(numel(spineLocs) + 3);
    plot(xDat, yDat, ...
         'Color'    , (1 - (5 - i)*0.2).*[1, 1, 1], ...
         'LineStyle', '-', ...
         'LineWidth', 1.5); hold on;
end
for i = 1:numel(spineLocs)
    xDat = [0.05, 0.09];
    yDat = [1, 1].*(i + 1)./(numel(spineLocs) + 3);
    plot(xDat, yDat, ...
         'Color'    , greenColors{i}, ...
         'LineStyle', '-', ...
         'LineWidth', 1.5); hold on;
end
for i = 1:3
    xDat = [0.1, 0.14];
    yDat = [1, 1].*(i + 1)./(numel(spineLocs) + 3);
    plot(xDat, yDat, ...
         'Color'    , blueColors{4 - i}, ...
         'LineStyle', '-', ...
         'LineWidth', 1.5); hold on;
end

% plot legend label for simulation results
text('String'             , 'Simulation results', ...
     'Interpreter'        , 'tex', ...
     'FontSize'           , 10, ...
     'FontName'           , 'Arial', ...
     'Units'              , 'data', ...
     'Position'           , [0.16, 0.5], ...
     'HorizontalAlignment', 'left', ...
     'VerticalAlignment'  , 'middle'); hold on;
